@model FairWeatherFriend.Models.Race

@{
    ViewData["Title"] = "Details";
}

@using Microsoft.AspNetCore.Identity
@using FairWeatherFriend.Models

@inject SignInManager<ApplicationUser> SignInManager
@inject UserManager<ApplicationUser> UserManager


<h1>Details</h1>

<div>
    <h4>Race</h4>
    <hr />
    <dl class="row">
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Name)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Name)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Laps)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Laps)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.TimeOfDay)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.TimeOfDay)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Prize)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Prize)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.Track)
        </dt>
        <dd class="col-sm-10">
            @Html.DisplayFor(model => model.Track.Location)
        </dd>
        <dt class="col-sm-2">
            @Html.DisplayNameFor(model => model.isCancelled)
        </dt>
        @if (Model.isCancelled == true)
        {

            <dd class="col-sm-10">
                Cancelled
            </dd>
        }
        else
        {
            <dd class="col-sm-10">
                Race still on
            </dd>
        }

    </dl>
</div>
<div>
    @if (SignInManager.IsSignedIn(User) && @UserManager.GetUserAsync(User).Result.isAdmin == true)
    {
        <a asp-action="Edit" asp-route-id="@Model.Id">Edit</a>
    }

    <a asp-action="Index">Back to List</a>
</div>
